{"ast":null,"code":"import React,{useEffect}from'react';const useCarousel=_ref=>{let{rootRef,defaultVisibleIndex=0}=_ref;const[carouselItems,setCarouselItems]=React.useState([]);const[visibleIndexes,setVisible]=React.useState(new Set([defaultVisibleIndex]));const scrollToIndex=index=>{var _carouselItems$index;const pos='nearest';(_carouselItems$index=carouselItems[index])===null||_carouselItems$index===void 0?void 0:_carouselItems$index.scrollIntoView({behavior:'smooth',block:pos,inline:pos});};useEffect(()=>{if(rootRef.current){const C=Array.from(rootRef.current.children);setCarouselItems(C);const options={root:rootRef.current,threshold:1.0};const observer=new IntersectionObserver(e=>{e.forEach(entry=>{if(entry.intersectionRatio===1){visibleIndexes.add(C.indexOf(entry.target));}else{visibleIndexes.delete(C.indexOf(entry.target));}});const newSet=new Set(visibleIndexes.values());if(newSet.size>0)setVisible(newSet);},options);C.forEach(target=>{observer.observe(target);});// window.requestAnimationFrame(() => {\n//   window.requestAnimationFrame(() => {\nscrollToIndex(defaultVisibleIndex);//   });\n// });\n}},[rootRef.current]);const sortedArray=Array.from(visibleIndexes.values()).sort();return{visibleIndexes:sortedArray,scrollToIndex};};export{useCarousel};","map":{"version":3,"names":["React","useEffect","useCarousel","_ref","rootRef","defaultVisibleIndex","carouselItems","setCarouselItems","useState","visibleIndexes","setVisible","Set","scrollToIndex","index","_carouselItems$index","pos","scrollIntoView","behavior","block","inline","current","C","Array","from","children","options","root","threshold","observer","IntersectionObserver","e","forEach","entry","intersectionRatio","add","indexOf","target","delete","newSet","values","size","observe","sortedArray","sort"],"sources":["/Users/acm1pro/Downloads/sandbox/src/components/carousel/useCarousel.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\ninterface UseCarouselProps {\n  rootRef: React.RefObject<HTMLDivElement>;\n  defaultVisibleIndex?: number;\n}\n\nconst useCarousel = ({\n  rootRef,\n  defaultVisibleIndex = 0,\n}: UseCarouselProps): {\n  visibleIndexes: number[];\n  scrollToIndex: (index: number) => void;\n} => {\n  const [carouselItems, setCarouselItems] = React.useState<Element[]>([]);\n  const [visibleIndexes, setVisible] = React.useState(\n    new Set<number>([defaultVisibleIndex]),\n  );\n\n  const scrollToIndex = (index: number) => {\n    const pos = 'nearest';\n    carouselItems[index]?.scrollIntoView({\n      behavior: 'smooth',\n      block: pos,\n      inline: pos,\n    });\n  };\n\n  useEffect(() => {\n    if (rootRef.current) {\n      const C = Array.from(rootRef.current.children);\n      setCarouselItems(C);\n      const options = {\n        root: rootRef.current,\n        threshold: 1.0,\n      };\n\n      const observer = new IntersectionObserver((e) => {\n        e.forEach((entry) => {\n          if (entry.intersectionRatio === 1) {\n            visibleIndexes.add(C.indexOf(entry.target));\n          } else {\n            visibleIndexes.delete(C.indexOf(entry.target));\n          }\n        });\n        const newSet = new Set(visibleIndexes.values());\n        if (newSet.size > 0) setVisible(newSet);\n      }, options);\n\n      C.forEach((target) => {\n        observer.observe(target);\n      });\n\n      // window.requestAnimationFrame(() => {\n      //   window.requestAnimationFrame(() => {\n      scrollToIndex(defaultVisibleIndex);\n      //   });\n      // });\n    }\n  }, [rootRef.current]);\n\n  const sortedArray = Array.from(visibleIndexes.values()).sort();\n  return {\n    visibleIndexes: sortedArray,\n    scrollToIndex,\n  };\n};\n\nexport { useCarousel };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAOxC,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAMf,IANgB,CACnBC,OAAO,CACPC,mBAAmB,CAAG,CACN,CAAC,CAAAF,IAAA,CAIjB,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGP,KAAK,CAACQ,QAAQ,CAAY,EAAE,CAAC,CACvE,KAAM,CAACC,cAAc,CAAEC,UAAU,CAAC,CAAGV,KAAK,CAACQ,QAAQ,CACjD,GAAI,CAAAG,GAAG,CAAS,CAACN,mBAAmB,CAAC,CACvC,CAAC,CAED,KAAM,CAAAO,aAAa,CAAIC,KAAa,EAAK,KAAAC,oBAAA,CACvC,KAAM,CAAAC,GAAG,CAAG,SAAS,CACrB,CAAAD,oBAAA,CAAAR,aAAa,CAACO,KAAK,CAAC,UAAAC,oBAAA,iBAApBA,oBAAA,CAAsBE,cAAc,CAAC,CACnCC,QAAQ,CAAE,QAAQ,CAClBC,KAAK,CAAEH,GAAG,CACVI,MAAM,CAAEJ,GACV,CAAC,CAAC,CACJ,CAAC,CAEDd,SAAS,CAAC,IAAM,CACd,GAAIG,OAAO,CAACgB,OAAO,CAAE,CACnB,KAAM,CAAAC,CAAC,CAAGC,KAAK,CAACC,IAAI,CAACnB,OAAO,CAACgB,OAAO,CAACI,QAAQ,CAAC,CAC9CjB,gBAAgB,CAACc,CAAC,CAAC,CACnB,KAAM,CAAAI,OAAO,CAAG,CACdC,IAAI,CAAEtB,OAAO,CAACgB,OAAO,CACrBO,SAAS,CAAE,GACb,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CAAEC,CAAC,EAAK,CAC/CA,CAAC,CAACC,OAAO,CAAEC,KAAK,EAAK,CACnB,GAAIA,KAAK,CAACC,iBAAiB,GAAK,CAAC,CAAE,CACjCxB,cAAc,CAACyB,GAAG,CAACb,CAAC,CAACc,OAAO,CAACH,KAAK,CAACI,MAAM,CAAC,CAAC,CAC7C,CAAC,IAAM,CACL3B,cAAc,CAAC4B,MAAM,CAAChB,CAAC,CAACc,OAAO,CAACH,KAAK,CAACI,MAAM,CAAC,CAAC,CAChD,CACF,CAAC,CAAC,CACF,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAA3B,GAAG,CAACF,cAAc,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAC/C,GAAID,MAAM,CAACE,IAAI,CAAG,CAAC,CAAE9B,UAAU,CAAC4B,MAAM,CAAC,CACzC,CAAC,CAAEb,OAAO,CAAC,CAEXJ,CAAC,CAACU,OAAO,CAAEK,MAAM,EAAK,CACpBR,QAAQ,CAACa,OAAO,CAACL,MAAM,CAAC,CAC1B,CAAC,CAAC,CAEF;AACA;AACAxB,aAAa,CAACP,mBAAmB,CAAC,CAClC;AACA;AACF,CACF,CAAC,CAAE,CAACD,OAAO,CAACgB,OAAO,CAAC,CAAC,CAErB,KAAM,CAAAsB,WAAW,CAAGpB,KAAK,CAACC,IAAI,CAACd,cAAc,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAC9D,MAAO,CACLlC,cAAc,CAAEiC,WAAW,CAC3B9B,aACF,CAAC,CACH,CAAC,CAED,OAASV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}